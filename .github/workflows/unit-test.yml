name: Unit Test
run-name: ${{ github.actor }} is testing out "Unit Test" with GitHub Actions 🚀

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

    test:
        name: Test
        runs-on: ubuntu-latest

        services:
            postgres:
              image: postgres:16-alpine3.19
              env:
                POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
                POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
              ports:
                - 5432:5432
              options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5

        steps:

            - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
            - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
            - run: echo "🔎 The name of branch is ${{ github.ref }} and repository is ${{ github.repository }}."

            - name: Checkout code
              uses: actions/checkout@v4
            - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
            - run: echo "🖥️ The workflow is now ready to test code on the runner."
            
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                go-version: '1.22.x'
                check-latest: true
              id: go
            
            - name: Install Go dependencies
              run: go get ./...

            - name: Install golang-migrate
              run: |
                echo "Installing Golang-Migrate tool"
                curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
                sudo mv migrate /usr/bin/migrate

            - name: Run migrations
              run: |
                echo "DB Migration using Golang Migrate"
                migrate -path ./db/migration -database "postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}?sslmode=disable" -verbose up
                # make migrate-up

            - name: Test
              run: go test -v -cover ./...

            - name: Job Status
              run: echo "🍏 This job's status is ${{ job.status }}."